name: fth-gold-ci

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC for dependency checks
    - cron: '0 2 * * *'

env:
  FOUNDRY_PROFILE: ci

jobs:
  build-and-test:
    name: Build and Test Smart Contracts
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          
      - name: Cache Foundry dependencies
        uses: actions/cache@v3
        with:
          path: |
            smart-contracts/fth-gold/lib
            smart-contracts/fth-gold/out
            smart-contracts/fth-gold/cache
          key: foundry-${{ hashFiles('smart-contracts/fth-gold/foundry.toml', 'smart-contracts/fth-gold/foundry.lock') }}
          restore-keys: |
            foundry-
            
      - name: Install dependencies
        working-directory: smart-contracts/fth-gold
        run: |
          forge install OpenZeppelin/openzeppelin-contracts@v5.0.2 --no-commit
          forge install --no-commit
          
      - name: Check formatting
        working-directory: smart-contracts/fth-gold
        run: forge fmt --check
        
      - name: Build contracts
        working-directory: smart-contracts/fth-gold
        run: |
          forge build --sizes
          
      - name: Run tests
        working-directory: smart-contracts/fth-gold
        run: |
          forge test -vvv --gas-report
          
      - name: Generate test coverage
        working-directory: smart-contracts/fth-gold
        run: |
          forge coverage --report lcov --report summary
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: smart-contracts/fth-gold/lcov.info
          flags: smart-contracts
          name: fth-gold-coverage
          fail_ci_if_error: false
          
      - name: Check contract sizes
        working-directory: smart-contracts/fth-gold
        run: |
          forge build --sizes | grep -E "(Contract|Total)" || true

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build-and-test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          
      - name: Install dependencies
        working-directory: smart-contracts/fth-gold
        run: |
          forge install OpenZeppelin/openzeppelin-contracts@v5.0.2 --no-commit
          forge install --no-commit
          
      - name: Run Slither static analysis
        uses: crytic/slither-action@v0.3.0
        id: slither
        with:
          target: smart-contracts/fth-gold/contracts/
          slither-config: smart-contracts/fth-gold/slither.config.json
          fail-on: none
          
      - name: Create Slither report
        working-directory: smart-contracts/fth-gold
        run: |
          pip install slither-analyzer
          slither . --json slither-report.json || true
          
      - name: Upload Slither results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: slither-results
          path: smart-contracts/fth-gold/slither-report.json
          
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          
      - name: Check Solidity formatting
        working-directory: smart-contracts/fth-gold
        run: |
          forge fmt --check
          
      - name: Lint documentation
        run: |
          # Check for broken links in markdown files
          find . -name "*.md" -exec grep -l "http" {} \; | head -5 || true
          
      - name: Check file permissions
        run: |
          find . -name "*.sol" -executable -type f | head -5 || true
          
  documentation-check:
    name: Documentation Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Check required files
        run: |
          required_files=(
            "README.md"
            "CONTRIBUTING.md"
            "CODE_OF_CONDUCT.md"
            "SECURITY.md"
            "SUPPORT.md"
          )
          
          for file in "${required_files[@]}"; do
            if [[ ! -f "$file" ]]; then
              echo "❌ Missing required file: $file"
              exit 1
            else
              echo "✅ Found: $file"
            fi
          done
          
      - name: Validate markdown structure
        run: |
          # Check for proper heading structure in README
          if ! grep -q "^# " README.md; then
            echo "❌ README.md should start with a level 1 heading"
            exit 1
          fi
          echo "✅ Markdown structure looks good"
          
  artifact-check:
    name: Artifact and Build Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build-and-test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          
      - name: Install dependencies and build
        working-directory: smart-contracts/fth-gold
        run: |
          forge install OpenZeppelin/openzeppelin-contracts@v5.0.2 --no-commit
          forge build
          
      - name: Check for compilation artifacts
        working-directory: smart-contracts/fth-gold
        run: |
          if [[ ! -d "out" ]]; then
            echo "❌ Build artifacts not found"
            exit 1
          fi
          
          contract_count=$(find out -name "*.json" | wc -l)
          echo "✅ Found $contract_count contract artifacts"
          
          if [[ $contract_count -lt 1 ]]; then
            echo "❌ No contract artifacts found"
            exit 1
          fi
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: contract-artifacts
          path: smart-contracts/fth-gold/out/
          retention-days: 7

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build-and-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          
      - name: Install dependencies
        working-directory: smart-contracts/fth-gold
        run: |
          forge install OpenZeppelin/openzeppelin-contracts@v5.0.2 --no-commit
          forge install --no-commit
          
      - name: Run integration tests
        working-directory: smart-contracts/fth-gold
        run: |
          # Run specific integration test patterns
          forge test --match-path "**/integration/**" -vvv || echo "No integration tests found"
          forge test --match-contract "*Integration*" -vvv || echo "No integration test contracts found"
